#ifndef ARION_ABI_X8664_HPP
#define ARION_ABI_X8664_HPP

#include <arion/common/abi_manager.hpp>
#include <arion/common/global_defs.hpp>
#include <cstdint>
#include <map>
#include <string>

class Arion;

namespace arion_x86_64
{
inline std::map<uint64_t, std::string> NAME_BY_SYSCALL_NO = {{0, "read"},
                                                             {1, "write"},
                                                             {2, "open"},
                                                             {3, "close"},
                                                             {4, "newstat"},
                                                             {5, "newfstat"},
                                                             {6, "newlstat"},
                                                             {7, "poll"},
                                                             {8, "lseek"},
                                                             {9, "mmap"},
                                                             {10, "mprotect"},
                                                             {11, "munmap"},
                                                             {12, "brk"},
                                                             {13, "rt_sigaction"},
                                                             {14, "rt_sigprocmask"},
                                                             {15, "rt_sigreturn"},
                                                             {16, "ioctl"},
                                                             {17, "pread64"},
                                                             {18, "pwrite64"},
                                                             {19, "readv"},
                                                             {20, "writev"},
                                                             {21, "access"},
                                                             {22, "pipe"},
                                                             {23, "select"},
                                                             {24, "sched_yield"},
                                                             {25, "mremap"},
                                                             {26, "msync"},
                                                             {27, "mincore"},
                                                             {28, "madvise"},
                                                             {29, "shmget"},
                                                             {30, "shmat"},
                                                             {31, "shmctl"},
                                                             {32, "dup"},
                                                             {33, "dup2"},
                                                             {34, "pause"},
                                                             {35, "nanosleep"},
                                                             {36, "getitimer"},
                                                             {37, "alarm"},
                                                             {38, "setitimer"},
                                                             {39, "getpid"},
                                                             {40, "sendfile64"},
                                                             {41, "socket"},
                                                             {42, "connect"},
                                                             {43, "accept"},
                                                             {44, "sendto"},
                                                             {45, "recvfrom"},
                                                             {46, "sendmsg"},
                                                             {47, "recvmsg"},
                                                             {48, "shutdown"},
                                                             {49, "bind"},
                                                             {50, "listen"},
                                                             {51, "getsockname"},
                                                             {52, "getpeername"},
                                                             {53, "socketpair"},
                                                             {54, "setsockopt"},
                                                             {55, "getsockopt"},
                                                             {56, "clone"},
                                                             {57, "fork"},
                                                             {58, "vfork"},
                                                             {59, "execve"},
                                                             {60, "exit"},
                                                             {61, "wait4"},
                                                             {62, "kill"},
                                                             {63, "newuname"},
                                                             {64, "semget"},
                                                             {65, "semop"},
                                                             {66, "semctl"},
                                                             {67, "shmdt"},
                                                             {68, "msgget"},
                                                             {69, "msgsnd"},
                                                             {70, "msgrcv"},
                                                             {71, "msgctl"},
                                                             {72, "fcntl"},
                                                             {73, "flock"},
                                                             {74, "fsync"},
                                                             {75, "fdatasync"},
                                                             {76, "truncate"},
                                                             {77, "ftruncate"},
                                                             {78, "getdents"},
                                                             {79, "getcwd"},
                                                             {80, "chdir"},
                                                             {81, "fchdir"},
                                                             {82, "rename"},
                                                             {83, "mkdir"},
                                                             {84, "rmdir"},
                                                             {85, "creat"},
                                                             {86, "link"},
                                                             {87, "unlink"},
                                                             {88, "symlink"},
                                                             {89, "readlink"},
                                                             {90, "chmod"},
                                                             {91, "fchmod"},
                                                             {92, "chown"},
                                                             {93, "fchown"},
                                                             {94, "lchown"},
                                                             {95, "umask"},
                                                             {96, "gettimeofday"},
                                                             {97, "getrlimit"},
                                                             {98, "getrusage"},
                                                             {99, "sysinfo"},
                                                             {100, "times"},
                                                             {101, "ptrace"},
                                                             {102, "getuid"},
                                                             {103, "syslog"},
                                                             {104, "getgid"},
                                                             {105, "setuid"},
                                                             {106, "setgid"},
                                                             {107, "geteuid"},
                                                             {108, "getegid"},
                                                             {109, "setpgid"},
                                                             {110, "getppid"},
                                                             {111, "getpgrp"},
                                                             {112, "setsid"},
                                                             {113, "setreuid"},
                                                             {114, "setregid"},
                                                             {115, "getgroups"},
                                                             {116, "setgroups"},
                                                             {117, "setresuid"},
                                                             {118, "getresuid"},
                                                             {119, "setresgid"},
                                                             {120, "getresgid"},
                                                             {121, "getpgid"},
                                                             {122, "setfsuid"},
                                                             {123, "setfsgid"},
                                                             {124, "getsid"},
                                                             {125, "capget"},
                                                             {126, "capset"},
                                                             {127, "rt_sigpending"},
                                                             {128, "rt_sigtimedwait"},
                                                             {129, "rt_sigqueueinfo"},
                                                             {130, "rt_sigsuspend"},
                                                             {131, "sigaltstack"},
                                                             {132, "utime"},
                                                             {133, "mknod"},
                                                             {135, "personality"},
                                                             {136, "ustat"},
                                                             {137, "statfs"},
                                                             {138, "fstatfs"},
                                                             {139, "sysfs"},
                                                             {140, "getpriority"},
                                                             {141, "setpriority"},
                                                             {142, "sched_setparam"},
                                                             {143, "sched_getparam"},
                                                             {144, "sched_setscheduler"},
                                                             {145, "sched_getscheduler"},
                                                             {146, "sched_get_priority_max"},
                                                             {147, "sched_get_priority_min"},
                                                             {148, "sched_rr_get_interval"},
                                                             {149, "mlock"},
                                                             {150, "munlock"},
                                                             {151, "mlockall"},
                                                             {152, "munlockall"},
                                                             {153, "vhangup"},
                                                             {154, "modify_ldt"},
                                                             {155, "pivot_root"},
                                                             {157, "prctl"},
                                                             {158, "arch_prctl"},
                                                             {159, "adjtimex"},
                                                             {160, "setrlimit"},
                                                             {161, "chroot"},
                                                             {162, "sync"},
                                                             {163, "acct"},
                                                             {164, "settimeofday"},
                                                             {165, "mount"},
                                                             {166, "umount"},
                                                             {167, "swapon"},
                                                             {168, "swapoff"},
                                                             {169, "reboot"},
                                                             {170, "sethostname"},
                                                             {171, "setdomainname"},
                                                             {172, "iopl"},
                                                             {173, "ioperm"},
                                                             {175, "init_module"},
                                                             {176, "delete_module"},
                                                             {179, "quotactl"},
                                                             {186, "gettid"},
                                                             {187, "readahead"},
                                                             {188, "setxattr"},
                                                             {189, "lsetxattr"},
                                                             {190, "fsetxattr"},
                                                             {191, "getxattr"},
                                                             {192, "lgetxattr"},
                                                             {193, "fgetxattr"},
                                                             {194, "listxattr"},
                                                             {195, "llistxattr"},
                                                             {196, "flistxattr"},
                                                             {197, "removexattr"},
                                                             {198, "lremovexattr"},
                                                             {199, "fremovexattr"},
                                                             {200, "tkill"},
                                                             {201, "time"},
                                                             {202, "futex"},
                                                             {203, "sched_setaffinity"},
                                                             {204, "sched_getaffinity"},
                                                             {206, "io_setup"},
                                                             {207, "io_destroy"},
                                                             {208, "io_getevents"},
                                                             {209, "io_submit"},
                                                             {210, "io_cancel"},
                                                             {213, "epoll_create"},
                                                             {216, "remap_file_pages"},
                                                             {217, "getdents64"},
                                                             {218, "set_tid_address"},
                                                             {219, "restart_syscall"},
                                                             {220, "semtimedop"},
                                                             {221, "fadvise64"},
                                                             {222, "timer_create"},
                                                             {223, "timer_settime"},
                                                             {224, "timer_gettime"},
                                                             {225, "timer_getoverrun"},
                                                             {226, "timer_delete"},
                                                             {227, "clock_settime"},
                                                             {228, "clock_gettime"},
                                                             {229, "clock_getres"},
                                                             {230, "clock_nanosleep"},
                                                             {231, "exit_group"},
                                                             {232, "epoll_wait"},
                                                             {233, "epoll_ctl"},
                                                             {234, "tgkill"},
                                                             {235, "utimes"},
                                                             {237, "mbind"},
                                                             {238, "set_mempolicy"},
                                                             {239, "get_mempolicy"},
                                                             {240, "mq_open"},
                                                             {241, "mq_unlink"},
                                                             {242, "mq_timedsend"},
                                                             {243, "mq_timedreceive"},
                                                             {244, "mq_notify"},
                                                             {245, "mq_getsetattr"},
                                                             {246, "kexec_load"},
                                                             {247, "waitid"},
                                                             {248, "add_key"},
                                                             {249, "request_key"},
                                                             {250, "keyctl"},
                                                             {251, "ioprio_set"},
                                                             {252, "ioprio_get"},
                                                             {253, "inotify_init"},
                                                             {254, "inotify_add_watch"},
                                                             {255, "inotify_rm_watch"},
                                                             {256, "migrate_pages"},
                                                             {257, "openat"},
                                                             {258, "mkdirat"},
                                                             {259, "mknodat"},
                                                             {260, "fchownat"},
                                                             {261, "futimesat"},
                                                             {262, "newfstatat"},
                                                             {263, "unlinkat"},
                                                             {264, "renameat"},
                                                             {265, "linkat"},
                                                             {266, "symlinkat"},
                                                             {267, "readlinkat"},
                                                             {268, "fchmodat"},
                                                             {269, "faccessat"},
                                                             {270, "pselect6"},
                                                             {271, "ppoll"},
                                                             {272, "unshare"},
                                                             {273, "set_robust_list"},
                                                             {274, "get_robust_list"},
                                                             {275, "splice"},
                                                             {276, "tee"},
                                                             {277, "sync_file_range"},
                                                             {278, "vmsplice"},
                                                             {279, "move_pages"},
                                                             {280, "utimensat"},
                                                             {281, "epoll_pwait"},
                                                             {282, "signalfd"},
                                                             {283, "timerfd_create"},
                                                             {284, "eventfd"},
                                                             {285, "fallocate"},
                                                             {286, "timerfd_settime"},
                                                             {287, "timerfd_gettime"},
                                                             {288, "accept4"},
                                                             {289, "signalfd4"},
                                                             {290, "eventfd2"},
                                                             {291, "epoll_create1"},
                                                             {292, "dup3"},
                                                             {293, "pipe2"},
                                                             {294, "inotify_init1"},
                                                             {295, "preadv"},
                                                             {296, "pwritev"},
                                                             {297, "rt_tgsigqueueinfo"},
                                                             {298, "perf_event_open"},
                                                             {299, "recvmmsg"},
                                                             {300, "fanotify_init"},
                                                             {301, "fanotify_mark"},
                                                             {302, "prlimit64"},
                                                             {303, "name_to_handle_at"},
                                                             {304, "open_by_handle_at"},
                                                             {305, "clock_adjtime"},
                                                             {306, "syncfs"},
                                                             {307, "sendmmsg"},
                                                             {308, "setns"},
                                                             {309, "getcpu"},
                                                             {310, "process_vm_readv"},
                                                             {311, "process_vm_writev"},
                                                             {312, "kcmp"},
                                                             {313, "finit_module"},
                                                             {314, "sched_setattr"},
                                                             {315, "sched_getattr"},
                                                             {316, "renameat2"},
                                                             {317, "seccomp"},
                                                             {318, "getrandom"},
                                                             {319, "memfd_create"},
                                                             {320, "kexec_file_load"},
                                                             {321, "bpf"},
                                                             {322, "execveat"},
                                                             {323, "userfaultfd"},
                                                             {324, "membarrier"},
                                                             {325, "mlock2"},
                                                             {326, "copy_file_range"},
                                                             {327, "preadv2"},
                                                             {328, "pwritev2"},
                                                             {329, "pkey_mprotect"},
                                                             {330, "pkey_alloc"},
                                                             {331, "pkey_free"},
                                                             {332, "statx"},
                                                             {333, "io_pgetevents"},
                                                             {334, "rseq"},
                                                             {335, "uretprobe"},
                                                             {424, "pidfd_send_signal"},
                                                             {425, "io_uring_setup"},
                                                             {426, "io_uring_enter"},
                                                             {427, "io_uring_register"},
                                                             {428, "open_tree"},
                                                             {429, "move_mount"},
                                                             {430, "fsopen"},
                                                             {431, "fsconfig"},
                                                             {432, "fsmount"},
                                                             {433, "fspick"},
                                                             {434, "pidfd_open"},
                                                             {435, "clone3"},
                                                             {436, "close_range"},
                                                             {437, "openat2"},
                                                             {438, "pidfd_getfd"},
                                                             {439, "faccessat2"},
                                                             {440, "process_madvise"},
                                                             {441, "epoll_pwait2"},
                                                             {442, "mount_setattr"},
                                                             {443, "quotactl_fd"},
                                                             {444, "landlock_create_ruleset"},
                                                             {445, "landlock_add_rule"},
                                                             {446, "landlock_restrict_self"},
                                                             {447, "memfd_secret"},
                                                             {448, "process_mrelease"},
                                                             {449, "futex_waitv"},
                                                             {450, "set_mempolicy_home_node"},
                                                             {451, "cachestat"},
                                                             {452, "fchmodat2"},
                                                             {453, "map_shadow_stack"},
                                                             {454, "futex_wake"},
                                                             {455, "futex_wait"},
                                                             {456, "futex_requeue"},
                                                             {457, "statmount"},
                                                             {458, "listmount"},
                                                             {459, "lsm_get_self_attr"},
                                                             {460, "lsm_set_self_attr"},
                                                             {461, "lsm_list_modules"},
                                                             {462, "mseal"}};

inline std::map<std::string, arion::REG> ARCH_REGS = {
    {"AH", UC_X86_REG_AH},           {"AL", UC_X86_REG_AL},       {"AX", UC_X86_REG_AX},
    {"BH", UC_X86_REG_BH},           {"BL", UC_X86_REG_BL},       {"BP", UC_X86_REG_BP},
    {"BPL", UC_X86_REG_BPL},         {"BX", UC_X86_REG_BX},       {"CH", UC_X86_REG_CH},
    {"CL", UC_X86_REG_CL},           {"CS", UC_X86_REG_CS},       {"CX", UC_X86_REG_CX},
    {"DH", UC_X86_REG_DH},           {"DI", UC_X86_REG_DI},       {"DIL", UC_X86_REG_DIL},
    {"DL", UC_X86_REG_DL},           {"DS", UC_X86_REG_DS},       {"DX", UC_X86_REG_DX},
    {"EAX", UC_X86_REG_EAX},         {"EBP", UC_X86_REG_EBP},     {"EBX", UC_X86_REG_EBX},
    {"ECX", UC_X86_REG_ECX},         {"EDI", UC_X86_REG_EDI},     {"EDX", UC_X86_REG_EDX},
    {"EIP", UC_X86_REG_EIP},         {"ES", UC_X86_REG_ES},       {"ESI", UC_X86_REG_ESI},
    {"ESP", UC_X86_REG_ESP},         {"FPSW", UC_X86_REG_FPSW},   {"FS", UC_X86_REG_FS},
    {"GS", UC_X86_REG_GS},           {"IP", UC_X86_REG_IP},       {"RAX", UC_X86_REG_RAX},
    {"RBP", UC_X86_REG_RBP},         {"RBX", UC_X86_REG_RBX},     {"RCX", UC_X86_REG_RCX},
    {"RDI", UC_X86_REG_RDI},         {"RDX", UC_X86_REG_RDX},     {"RIP", UC_X86_REG_RIP},
    {"RSI", UC_X86_REG_RSI},         {"RSP", UC_X86_REG_RSP},     {"SI", UC_X86_REG_SI},
    {"SIL", UC_X86_REG_SIL},         {"SP", UC_X86_REG_SP},       {"SPL", UC_X86_REG_SPL},
    {"SS", UC_X86_REG_SS},           {"CR0", UC_X86_REG_CR0},     {"CR1", UC_X86_REG_CR1},
    {"CR2", UC_X86_REG_CR2},         {"CR3", UC_X86_REG_CR3},     {"CR4", UC_X86_REG_CR4},
    {"CR8", UC_X86_REG_CR8},         {"DR0", UC_X86_REG_DR0},     {"DR1", UC_X86_REG_DR1},
    {"DR2", UC_X86_REG_DR2},         {"DR3", UC_X86_REG_DR3},     {"DR4", UC_X86_REG_DR4},
    {"DR5", UC_X86_REG_DR5},         {"DR6", UC_X86_REG_DR6},     {"DR7", UC_X86_REG_DR7},
    {"FP0", UC_X86_REG_FP0},         {"FP1", UC_X86_REG_FP1},     {"FP2", UC_X86_REG_FP2},
    {"FP3", UC_X86_REG_FP3},         {"FP4", UC_X86_REG_FP4},     {"FP5", UC_X86_REG_FP5},
    {"FP6", UC_X86_REG_FP6},         {"FP7", UC_X86_REG_FP7},     {"R8", UC_X86_REG_R8},
    {"R9", UC_X86_REG_R9},           {"R10", UC_X86_REG_R10},     {"R11", UC_X86_REG_R11},
    {"R12", UC_X86_REG_R12},         {"R13", UC_X86_REG_R13},     {"R14", UC_X86_REG_R14},
    {"R15", UC_X86_REG_R15},         {"ST0", UC_X86_REG_ST0},     {"ST1", UC_X86_REG_ST1},
    {"ST2", UC_X86_REG_ST2},         {"ST3", UC_X86_REG_ST3},     {"ST4", UC_X86_REG_ST4},
    {"ST5", UC_X86_REG_ST5},         {"ST6", UC_X86_REG_ST6},     {"ST7", UC_X86_REG_ST7},
    {"XMM0", UC_X86_REG_XMM0},       {"XMM1", UC_X86_REG_XMM1},   {"XMM2", UC_X86_REG_XMM2},
    {"XMM3", UC_X86_REG_XMM3},       {"XMM4", UC_X86_REG_XMM4},   {"XMM5", UC_X86_REG_XMM5},
    {"XMM6", UC_X86_REG_XMM6},       {"XMM7", UC_X86_REG_XMM7},   {"XMM8", UC_X86_REG_XMM8},
    {"XMM9", UC_X86_REG_XMM9},       {"XMM10", UC_X86_REG_XMM10}, {"XMM11", UC_X86_REG_XMM11},
    {"XMM12", UC_X86_REG_XMM12},     {"XMM13", UC_X86_REG_XMM13}, {"XMM14", UC_X86_REG_XMM14},
    {"XMM15", UC_X86_REG_XMM15},     {"XMM16", UC_X86_REG_XMM16}, {"XMM17", UC_X86_REG_XMM17},
    {"XMM18", UC_X86_REG_XMM18},     {"XMM19", UC_X86_REG_XMM19}, {"XMM20", UC_X86_REG_XMM20},
    {"XMM21", UC_X86_REG_XMM21},     {"XMM22", UC_X86_REG_XMM22}, {"XMM23", UC_X86_REG_XMM23},
    {"XMM24", UC_X86_REG_XMM24},     {"XMM25", UC_X86_REG_XMM25}, {"XMM26", UC_X86_REG_XMM26},
    {"XMM27", UC_X86_REG_XMM27},     {"XMM28", UC_X86_REG_XMM28}, {"XMM29", UC_X86_REG_XMM29},
    {"XMM30", UC_X86_REG_XMM30},     {"XMM31", UC_X86_REG_XMM31}, {"YMM0", UC_X86_REG_YMM0},
    {"YMM1", UC_X86_REG_YMM1},       {"YMM2", UC_X86_REG_YMM2},   {"YMM3", UC_X86_REG_YMM3},
    {"YMM4", UC_X86_REG_YMM4},       {"YMM5", UC_X86_REG_YMM5},   {"YMM6", UC_X86_REG_YMM6},
    {"YMM7", UC_X86_REG_YMM7},       {"YMM8", UC_X86_REG_YMM8},   {"YMM9", UC_X86_REG_YMM9},
    {"YMM10", UC_X86_REG_YMM10},     {"YMM11", UC_X86_REG_YMM11}, {"YMM12", UC_X86_REG_YMM12},
    {"YMM13", UC_X86_REG_YMM13},     {"YMM14", UC_X86_REG_YMM14}, {"YMM15", UC_X86_REG_YMM15},
    {"YMM16", UC_X86_REG_YMM16},     {"YMM17", UC_X86_REG_YMM17}, {"YMM18", UC_X86_REG_YMM18},
    {"YMM19", UC_X86_REG_YMM19},     {"YMM20", UC_X86_REG_YMM20}, {"YMM21", UC_X86_REG_YMM21},
    {"YMM22", UC_X86_REG_YMM22},     {"YMM23", UC_X86_REG_YMM23}, {"YMM24", UC_X86_REG_YMM24},
    {"YMM25", UC_X86_REG_YMM25},     {"YMM26", UC_X86_REG_YMM26}, {"YMM27", UC_X86_REG_YMM27},
    {"YMM28", UC_X86_REG_YMM28},     {"YMM29", UC_X86_REG_YMM29}, {"YMM30", UC_X86_REG_YMM30},
    {"YMM31", UC_X86_REG_YMM31},     {"ZMM0", UC_X86_REG_ZMM0},   {"ZMM1", UC_X86_REG_ZMM1},
    {"ZMM2", UC_X86_REG_ZMM2},       {"ZMM3", UC_X86_REG_ZMM3},   {"ZMM4", UC_X86_REG_ZMM4},
    {"ZMM5", UC_X86_REG_ZMM5},       {"ZMM6", UC_X86_REG_ZMM6},   {"ZMM7", UC_X86_REG_ZMM7},
    {"ZMM8", UC_X86_REG_ZMM8},       {"ZMM9", UC_X86_REG_ZMM9},   {"ZMM10", UC_X86_REG_ZMM10},
    {"ZMM11", UC_X86_REG_ZMM11},     {"ZMM12", UC_X86_REG_ZMM12}, {"ZMM13", UC_X86_REG_ZMM13},
    {"ZMM14", UC_X86_REG_ZMM14},     {"ZMM15", UC_X86_REG_ZMM15}, {"ZMM16", UC_X86_REG_ZMM16},
    {"ZMM17", UC_X86_REG_ZMM17},     {"ZMM18", UC_X86_REG_ZMM18}, {"ZMM19", UC_X86_REG_ZMM19},
    {"ZMM20", UC_X86_REG_ZMM20},     {"ZMM21", UC_X86_REG_ZMM21}, {"ZMM22", UC_X86_REG_ZMM22},
    {"ZMM23", UC_X86_REG_ZMM23},     {"ZMM24", UC_X86_REG_ZMM24}, {"ZMM25", UC_X86_REG_ZMM25},
    {"ZMM26", UC_X86_REG_ZMM26},     {"ZMM27", UC_X86_REG_ZMM27}, {"ZMM28", UC_X86_REG_ZMM28},
    {"ZMM29", UC_X86_REG_ZMM29},     {"ZMM30", UC_X86_REG_ZMM30}, {"ZMM31", UC_X86_REG_ZMM31},
    {"R8B", UC_X86_REG_R8B},         {"R9B", UC_X86_REG_R9B},     {"R10B", UC_X86_REG_R10B},
    {"R11B", UC_X86_REG_R11B},       {"R12B", UC_X86_REG_R12B},   {"R13B", UC_X86_REG_R13B},
    {"R14B", UC_X86_REG_R14B},       {"R15B", UC_X86_REG_R15B},   {"R8D", UC_X86_REG_R8D},
    {"R9D", UC_X86_REG_R9D},         {"R10D", UC_X86_REG_R10D},   {"R11D", UC_X86_REG_R11D},
    {"R12D", UC_X86_REG_R12D},       {"R13D", UC_X86_REG_R13D},   {"R14D", UC_X86_REG_R14D},
    {"R15D", UC_X86_REG_R15D},       {"R8W", UC_X86_REG_R8W},     {"R9W", UC_X86_REG_R9W},
    {"R10W", UC_X86_REG_R10W},       {"R11W", UC_X86_REG_R11W},   {"R12W", UC_X86_REG_R12W},
    {"R13W", UC_X86_REG_R13W},       {"R14W", UC_X86_REG_R14W},   {"R15W", UC_X86_REG_R15W},
    {"IDTR", UC_X86_REG_IDTR},       {"GDTR", UC_X86_REG_GDTR},   {"LDTR", UC_X86_REG_LDTR},
    {"TR", UC_X86_REG_TR},           {"FPCW", UC_X86_REG_FPCW},   {"FPTAG", UC_X86_REG_FPTAG},
    {"MSR", UC_X86_REG_MSR},         {"MXCSR", UC_X86_REG_MXCSR}, {"FS_BASE", UC_X86_REG_FS_BASE},
    {"GS_BASE", UC_X86_REG_GS_BASE}, {"FLAGS", UC_X86_REG_FLAGS}, {"EFLAGS", UC_X86_REG_EFLAGS},
    {"RFLAGS", UC_X86_REG_RFLAGS},   {"FIP", UC_X86_REG_FIP},     {"FCS", UC_X86_REG_FCS},
    {"FDP", UC_X86_REG_FDP},         {"FDS", UC_X86_REG_FDS},     {"FOP", UC_X86_REG_FOP}};

inline std::map<arion::REG, uint8_t> ARCH_REGS_SZ = {
    {UC_X86_REG_AH, 1},      {UC_X86_REG_AL, 1},      {UC_X86_REG_AX, 2},     {UC_X86_REG_BH, 1},
    {UC_X86_REG_BL, 1},      {UC_X86_REG_BP, 2},      {UC_X86_REG_BPL, 1},    {UC_X86_REG_BX, 2},
    {UC_X86_REG_CH, 1},      {UC_X86_REG_CL, 1},      {UC_X86_REG_CS, 2},     {UC_X86_REG_CX, 2},
    {UC_X86_REG_DH, 1},      {UC_X86_REG_DI, 2},      {UC_X86_REG_DIL, 1},    {UC_X86_REG_DL, 1},
    {UC_X86_REG_DS, 2},      {UC_X86_REG_DX, 2},      {UC_X86_REG_EAX, 4},    {UC_X86_REG_EBP, 4},
    {UC_X86_REG_EBX, 4},     {UC_X86_REG_ECX, 4},     {UC_X86_REG_EDI, 4},    {UC_X86_REG_EDX, 4},
    {UC_X86_REG_EIP, 4},     {UC_X86_REG_ES, 2},      {UC_X86_REG_ESI, 4},    {UC_X86_REG_ESP, 4},
    {UC_X86_REG_FPSW, 2},    {UC_X86_REG_FS, 2},      {UC_X86_REG_GS, 2},     {UC_X86_REG_IP, 2},
    {UC_X86_REG_RAX, 8},     {UC_X86_REG_RBP, 8},     {UC_X86_REG_RBX, 8},    {UC_X86_REG_RCX, 8},
    {UC_X86_REG_RDI, 8},     {UC_X86_REG_RDX, 8},     {UC_X86_REG_RIP, 8},    {UC_X86_REG_RSI, 8},
    {UC_X86_REG_RSP, 8},     {UC_X86_REG_SI, 2},      {UC_X86_REG_SIL, 1},    {UC_X86_REG_SP, 2},
    {UC_X86_REG_SPL, 1},     {UC_X86_REG_SS, 2},      {UC_X86_REG_CR0, 8},    {UC_X86_REG_CR1, 8},
    {UC_X86_REG_CR2, 8},     {UC_X86_REG_CR3, 8},     {UC_X86_REG_CR4, 8},    {UC_X86_REG_CR8, 8},
    {UC_X86_REG_DR0, 8},     {UC_X86_REG_DR1, 8},     {UC_X86_REG_DR2, 8},    {UC_X86_REG_DR3, 8},
    {UC_X86_REG_DR4, 8},     {UC_X86_REG_DR5, 8},     {UC_X86_REG_DR6, 8},    {UC_X86_REG_DR7, 8},
    {UC_X86_REG_FP0, 10},    {UC_X86_REG_FP1, 10},    {UC_X86_REG_FP2, 10},   {UC_X86_REG_FP3, 10},
    {UC_X86_REG_FP4, 10},    {UC_X86_REG_FP5, 10},    {UC_X86_REG_FP6, 10},   {UC_X86_REG_FP7, 10},
    {UC_X86_REG_R8, 8},      {UC_X86_REG_R9, 8},      {UC_X86_REG_R10, 8},    {UC_X86_REG_R11, 8},
    {UC_X86_REG_R12, 8},     {UC_X86_REG_R13, 8},     {UC_X86_REG_R14, 8},    {UC_X86_REG_R15, 8},
    {UC_X86_REG_ST0, 10},    {UC_X86_REG_ST1, 10},    {UC_X86_REG_ST2, 10},   {UC_X86_REG_ST3, 10},
    {UC_X86_REG_ST4, 10},    {UC_X86_REG_ST5, 10},    {UC_X86_REG_ST6, 10},   {UC_X86_REG_ST7, 10},
    {UC_X86_REG_XMM0, 16},   {UC_X86_REG_XMM1, 16},   {UC_X86_REG_XMM2, 16},  {UC_X86_REG_XMM3, 16},
    {UC_X86_REG_XMM4, 16},   {UC_X86_REG_XMM5, 16},   {UC_X86_REG_XMM6, 16},  {UC_X86_REG_XMM7, 16},
    {UC_X86_REG_XMM8, 16},   {UC_X86_REG_XMM9, 16},   {UC_X86_REG_XMM10, 16}, {UC_X86_REG_XMM11, 16},
    {UC_X86_REG_XMM12, 16},  {UC_X86_REG_XMM13, 16},  {UC_X86_REG_XMM14, 16}, {UC_X86_REG_XMM15, 16},
    {UC_X86_REG_XMM16, 16},  {UC_X86_REG_XMM17, 16},  {UC_X86_REG_XMM18, 16}, {UC_X86_REG_XMM19, 16},
    {UC_X86_REG_XMM20, 16},  {UC_X86_REG_XMM21, 16},  {UC_X86_REG_XMM22, 16}, {UC_X86_REG_XMM23, 16},
    {UC_X86_REG_XMM24, 16},  {UC_X86_REG_XMM25, 16},  {UC_X86_REG_XMM26, 16}, {UC_X86_REG_XMM27, 16},
    {UC_X86_REG_XMM28, 16},  {UC_X86_REG_XMM29, 16},  {UC_X86_REG_XMM30, 16}, {UC_X86_REG_XMM31, 16},
    {UC_X86_REG_YMM0, 32},   {UC_X86_REG_YMM1, 32},   {UC_X86_REG_YMM2, 32},  {UC_X86_REG_YMM3, 32},
    {UC_X86_REG_YMM4, 32},   {UC_X86_REG_YMM5, 32},   {UC_X86_REG_YMM6, 32},  {UC_X86_REG_YMM7, 32},
    {UC_X86_REG_YMM8, 32},   {UC_X86_REG_YMM9, 32},   {UC_X86_REG_YMM10, 32}, {UC_X86_REG_YMM11, 32},
    {UC_X86_REG_YMM12, 32},  {UC_X86_REG_YMM13, 32},  {UC_X86_REG_YMM14, 32}, {UC_X86_REG_YMM15, 32},
    {UC_X86_REG_YMM16, 32},  {UC_X86_REG_YMM17, 32},  {UC_X86_REG_YMM18, 32}, {UC_X86_REG_YMM19, 32},
    {UC_X86_REG_YMM20, 32},  {UC_X86_REG_YMM21, 32},  {UC_X86_REG_YMM22, 32}, {UC_X86_REG_YMM23, 32},
    {UC_X86_REG_YMM24, 32},  {UC_X86_REG_YMM25, 32},  {UC_X86_REG_YMM26, 32}, {UC_X86_REG_YMM27, 32},
    {UC_X86_REG_YMM28, 32},  {UC_X86_REG_YMM29, 32},  {UC_X86_REG_YMM30, 32}, {UC_X86_REG_YMM31, 32},
    {UC_X86_REG_ZMM0, 64},   {UC_X86_REG_ZMM1, 64},   {UC_X86_REG_ZMM2, 64},  {UC_X86_REG_ZMM3, 64},
    {UC_X86_REG_ZMM4, 64},   {UC_X86_REG_ZMM5, 64},   {UC_X86_REG_ZMM6, 64},  {UC_X86_REG_ZMM7, 64},
    {UC_X86_REG_ZMM8, 64},   {UC_X86_REG_ZMM9, 64},   {UC_X86_REG_ZMM10, 64}, {UC_X86_REG_ZMM11, 64},
    {UC_X86_REG_ZMM12, 64},  {UC_X86_REG_ZMM13, 64},  {UC_X86_REG_ZMM14, 64}, {UC_X86_REG_ZMM15, 64},
    {UC_X86_REG_ZMM16, 64},  {UC_X86_REG_ZMM17, 64},  {UC_X86_REG_ZMM18, 64}, {UC_X86_REG_ZMM19, 64},
    {UC_X86_REG_ZMM20, 64},  {UC_X86_REG_ZMM21, 64},  {UC_X86_REG_ZMM22, 64}, {UC_X86_REG_ZMM23, 64},
    {UC_X86_REG_ZMM24, 64},  {UC_X86_REG_ZMM25, 64},  {UC_X86_REG_ZMM26, 64}, {UC_X86_REG_ZMM27, 64},
    {UC_X86_REG_ZMM28, 64},  {UC_X86_REG_ZMM29, 64},  {UC_X86_REG_ZMM30, 64}, {UC_X86_REG_ZMM31, 64},
    {UC_X86_REG_R8B, 1},     {UC_X86_REG_R9B, 1},     {UC_X86_REG_R10B, 1},   {UC_X86_REG_R11B, 1},
    {UC_X86_REG_R12B, 1},    {UC_X86_REG_R13B, 1},    {UC_X86_REG_R14B, 1},   {UC_X86_REG_R15B, 1},
    {UC_X86_REG_R8D, 4},     {UC_X86_REG_R9D, 4},     {UC_X86_REG_R10D, 4},   {UC_X86_REG_R11D, 4},
    {UC_X86_REG_R12D, 4},    {UC_X86_REG_R13D, 4},    {UC_X86_REG_R14D, 4},   {UC_X86_REG_R15D, 4},
    {UC_X86_REG_R8W, 2},     {UC_X86_REG_R9W, 2},     {UC_X86_REG_R10W, 2},   {UC_X86_REG_R11W, 2},
    {UC_X86_REG_R12W, 2},    {UC_X86_REG_R13W, 2},    {UC_X86_REG_R14W, 2},   {UC_X86_REG_R15W, 2},
    {UC_X86_REG_IDTR, 24},   {UC_X86_REG_GDTR, 24},   {UC_X86_REG_LDTR, 24},  {UC_X86_REG_TR, 24},
    {UC_X86_REG_FPCW, 2},    {UC_X86_REG_FPTAG, 2},   {UC_X86_REG_MSR, 16},   {UC_X86_REG_MXCSR, 4},
    {UC_X86_REG_FS_BASE, 8}, {UC_X86_REG_GS_BASE, 8}, {UC_X86_REG_FLAGS, 2},  {UC_X86_REG_EFLAGS, 4},
    {UC_X86_REG_RFLAGS, 8},  {UC_X86_REG_FIP, 8},     {UC_X86_REG_FCS, 2},    {UC_X86_REG_FDP, 8},
    {UC_X86_REG_FDS, 2},     {UC_X86_REG_FOP, 2}};

inline std::vector<arion::REG> CTXT_REGS = {
    UC_X86_REG_FS,     UC_X86_REG_GS,    UC_X86_REG_RAX,   UC_X86_REG_RBP,   UC_X86_REG_RBX,     UC_X86_REG_RCX,
    UC_X86_REG_RDI,    UC_X86_REG_RDX,   UC_X86_REG_RIP,   UC_X86_REG_RSI,   UC_X86_REG_RSP,     UC_X86_REG_SS,
    UC_X86_REG_CS,     UC_X86_REG_DS,    UC_X86_REG_FP0,   UC_X86_REG_FP1,   UC_X86_REG_FP2,     UC_X86_REG_FP3,
    UC_X86_REG_FP4,    UC_X86_REG_FP5,   UC_X86_REG_FP6,   UC_X86_REG_FP7,   UC_X86_REG_R8,      UC_X86_REG_R9,
    UC_X86_REG_R10,    UC_X86_REG_R11,   UC_X86_REG_R12,   UC_X86_REG_R13,   UC_X86_REG_R14,     UC_X86_REG_R15,
    UC_X86_REG_ST0,    UC_X86_REG_ST1,   UC_X86_REG_ST2,   UC_X86_REG_ST3,   UC_X86_REG_ST4,     UC_X86_REG_ST5,
    UC_X86_REG_ST6,    UC_X86_REG_ST7,   UC_X86_REG_ZMM0,  UC_X86_REG_ZMM1,  UC_X86_REG_ZMM2,    UC_X86_REG_ZMM3,
    UC_X86_REG_ZMM4,   UC_X86_REG_ZMM5,  UC_X86_REG_ZMM6,  UC_X86_REG_ZMM7,  UC_X86_REG_ZMM8,    UC_X86_REG_ZMM9,
    UC_X86_REG_ZMM10,  UC_X86_REG_ZMM11, UC_X86_REG_ZMM12, UC_X86_REG_ZMM13, UC_X86_REG_ZMM14,   UC_X86_REG_ZMM15,
    UC_X86_REG_ZMM16,  UC_X86_REG_ZMM17, UC_X86_REG_ZMM18, UC_X86_REG_ZMM19, UC_X86_REG_ZMM20,   UC_X86_REG_ZMM21,
    UC_X86_REG_ZMM22,  UC_X86_REG_ZMM23, UC_X86_REG_ZMM24, UC_X86_REG_ZMM25, UC_X86_REG_ZMM26,   UC_X86_REG_ZMM27,
    UC_X86_REG_ZMM28,  UC_X86_REG_ZMM29, UC_X86_REG_ZMM30, UC_X86_REG_ZMM31, UC_X86_REG_FS_BASE, UC_X86_REG_GS_BASE,
    UC_X86_REG_RFLAGS,
};

inline std::map<uint64_t, CPU_INTR> IDT = {{0, DIVIDE_ERROR},
                                           {1, DEBUG_EXCEPTION},
                                           {2, NON_MASKABLE_INTR},
                                           {3, BREAKPOINT},
                                           {4, OVERFLOW},
                                           {5, BOUND_RANGE_EXCEEDED},
                                           {6, INVALID_OPCODE},
                                           {7, DEVICE_NOT_AVAILABLE},
                                           {8, DOUBLE_FAULT},
                                           {9, COPROCESSOR_SEGMENT_OVERRUN},
                                           {10, INVALID_TSS},
                                           {11, SEGMENT_NOT_PRESENT},
                                           {12, STACK_SEGMENT_FAULT},
                                           {13, GENERAL_PROTECTION_FAULT},
                                           {14, PAGE_FAULT},
                                           {15, RESERVED},
                                           {16, X87_FLOATING_POINT_EXCEPTION},
                                           {17, ALIGNMENT_CHECK},
                                           {18, MACHINE_CHECK},
                                           {19, SIMD_FLOATING_POINT_ERROR}};

inline ABI_REGISTERS ABI_REGS = ABI_REGISTERS(UC_X86_REG_RIP, UC_X86_REG_RSP);

inline ABI_CALLING_CONVENTION ABI_CALLING_CONV = ABI_CALLING_CONVENTION(
    UC_X86_REG_RAX, {UC_X86_REG_RDI, UC_X86_REG_RSI, UC_X86_REG_RDX, UC_X86_REG_RCX, UC_X86_REG_R8, UC_X86_REG_R9});

inline ABI_SYSCALLING_CONVENTION ABI_SYSCALLING_CONV = ABI_SYSCALLING_CONVENTION(
    UC_X86_REG_RAX, UC_X86_REG_RAX,
    {UC_X86_REG_RDI, UC_X86_REG_RSI, UC_X86_REG_RDX, UC_X86_REG_R10, UC_X86_REG_R8, UC_X86_REG_R9});

inline arion::KERNEL_SEG_FLAGS SEG_FLAGS = ARION_VVAR_PRESENT | ARION_VDSO_PRESENT | ARION_VSYSCALL_PRESENT;

inline uint32_t HWCAP2 = 2;

inline uint32_t HWCAP = 0xbfebfbff;

inline const size_t PTR_SZ = 8;

inline const uint16_t ARCH_SZ = 64;

inline arion::CPU_ARCH ARCH = arion::CPU_ARCH::X8664_ARCH;

inline ABI_ATTRIBUTES ABI_ATTRS = ABI_ATTRIBUTES(ARCH, ARCH_SZ, PTR_SZ, HWCAP, HWCAP2, SEG_FLAGS, ABI_REGS,
                                                 ABI_CALLING_CONV, ABI_SYSCALLING_CONV, NAME_BY_SYSCALL_NO);
} // namespace arion_x86_64

class AbiManagerX8664 : public AbiManager
{
  private:
    static void syscall_hook(std::shared_ptr<Arion> arion, void *user_data);
    void setup();

  public:
    AbiManagerX8664()
        : AbiManager(std::make_shared<ABI_ATTRIBUTES>(arion_x86_64::ABI_ATTRS), arion_x86_64::ARCH_REGS,
                     arion_x86_64::ARCH_REGS_SZ, arion_x86_64::CTXT_REGS, arion_x86_64::IDT, false) {};

    std::array<arion::BYTE, VSYSCALL_ENTRY_SZ> gen_vsyscall_entry(uint64_t syscall_no);
    ks_engine *curr_ks();
    csh *curr_cs();
    arion::ADDR dump_tls();
    void load_tls(arion::ADDR new_tls);
};

#endif // ARION_ABI_X8664_HPP
