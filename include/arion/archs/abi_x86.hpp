#ifndef ARION_ABI_X86_HPP
#define ARION_ABI_X86_HPP

#include <arion/common/abi_manager.hpp>
#include <arion/common/global_defs.hpp>
#include <cstdint>
#include <map>
#include <string>

class Arion;

namespace arion_x86
{
inline std::map<uint64_t, std::string> NAME_BY_SYSCALL_NO = {{0, "restart_syscall"},
                                                             {1, "exit"},
                                                             {2, "fork"},
                                                             {3, "read"},
                                                             {4, "write"},
                                                             {5, "open"},
                                                             {6, "close"},
                                                             {7, "waitpid"},
                                                             {8, "creat"},
                                                             {9, "link"},
                                                             {10, "unlink"},
                                                             {11, "execve"},
                                                             {12, "chdir"},
                                                             {13, "time"},
                                                             {14, "mknod"},
                                                             {15, "chmod"},
                                                             {16, "lchown16"},
                                                             {18, "stat"},
                                                             {19, "lseek"},
                                                             {20, "getpid"},
                                                             {21, "mount"},
                                                             {22, "oldumount"},
                                                             {23, "setuid16"},
                                                             {24, "getuid16"},
                                                             {25, "stime"},
                                                             {26, "ptrace"},
                                                             {27, "alarm"},
                                                             {28, "fstat"},
                                                             {29, "pause"},
                                                             {30, "utime"},
                                                             {33, "access"},
                                                             {34, "nice"},
                                                             {36, "sync"},
                                                             {37, "kill"},
                                                             {38, "rename"},
                                                             {39, "mkdir"},
                                                             {40, "rmdir"},
                                                             {41, "dup"},
                                                             {42, "pipe"},
                                                             {43, "times"},
                                                             {45, "brk"},
                                                             {46, "setgid16"},
                                                             {47, "getgid16"},
                                                             {48, "signal"},
                                                             {49, "geteuid16"},
                                                             {50, "getegid16"},
                                                             {51, "acct"},
                                                             {52, "umount"},
                                                             {54, "ioctl"},
                                                             {55, "fcntl"},
                                                             {57, "setpgid"},
                                                             {59, "olduname"},
                                                             {60, "umask"},
                                                             {61, "chroot"},
                                                             {62, "ustat"},
                                                             {63, "dup2"},
                                                             {64, "getppid"},
                                                             {65, "getpgrp"},
                                                             {66, "setsid"},
                                                             {67, "sigaction"},
                                                             {68, "sgetmask"},
                                                             {69, "ssetmask"},
                                                             {70, "setreuid16"},
                                                             {71, "setregid16"},
                                                             {72, "sigsuspend"},
                                                             {73, "sigpending"},
                                                             {74, "sethostname"},
                                                             {75, "setrlimit"},
                                                             {76, "old_getrlimit"},
                                                             {77, "getrusage"},
                                                             {78, "gettimeofday"},
                                                             {79, "settimeofday"},
                                                             {80, "getgroups16"},
                                                             {81, "setgroups16"},
                                                             {82, "select"},
                                                             {83, "symlink"},
                                                             {84, "lstat"},
                                                             {85, "readlink"},
                                                             {86, "uselib"},
                                                             {87, "swapon"},
                                                             {88, "reboot"},
                                                             {89, "readdir"},
                                                             {90, "mmap"},
                                                             {91, "munmap"},
                                                             {92, "truncate"},
                                                             {93, "ftruncate"},
                                                             {94, "fchmod"},
                                                             {95, "fchown16"},
                                                             {96, "getpriority"},
                                                             {97, "setpriority"},
                                                             {99, "statfs"},
                                                             {100, "fstatfs"},
                                                             {101, "ioperm"},
                                                             {102, "socketcall"},
                                                             {103, "syslog"},
                                                             {104, "setitimer"},
                                                             {105, "getitimer"},
                                                             {106, "newstat"},
                                                             {107, "newlstat"},
                                                             {108, "newfstat"},
                                                             {109, "uname"},
                                                             {110, "iopl"},
                                                             {111, "vhangup"},
                                                             {113, "vm86old"},
                                                             {114, "wait4"},
                                                             {115, "swapoff"},
                                                             {116, "sysinfo"},
                                                             {117, "ipc"},
                                                             {118, "fsync"},
                                                             {119, "sigreturn"},
                                                             {120, "clone"},
                                                             {121, "setdomainname"},
                                                             {122, "newuname"},
                                                             {123, "modify_ldt"},
                                                             {124, "adjtimex"},
                                                             {125, "mprotect"},
                                                             {126, "sigprocmask"},
                                                             {128, "init_module"},
                                                             {129, "delete_module"},
                                                             {131, "quotactl"},
                                                             {132, "getpgid"},
                                                             {133, "fchdir"},
                                                             {135, "sysfs"},
                                                             {136, "personality"},
                                                             {138, "setfsuid16"},
                                                             {139, "setfsgid16"},
                                                             {140, "llseek"},
                                                             {141, "getdents"},
                                                             {142, "select"},
                                                             {143, "flock"},
                                                             {144, "msync"},
                                                             {145, "readv"},
                                                             {146, "writev"},
                                                             {147, "getsid"},
                                                             {148, "fdatasync"},
                                                             {150, "mlock"},
                                                             {151, "munlock"},
                                                             {152, "mlockall"},
                                                             {153, "munlockall"},
                                                             {154, "sched_setparam"},
                                                             {155, "sched_getparam"},
                                                             {156, "sched_setscheduler"},
                                                             {157, "sched_getscheduler"},
                                                             {158, "sched_yield"},
                                                             {159, "sched_get_priority_max"},
                                                             {160, "sched_get_priority_min"},
                                                             {161, "sched_rr_get_interval"},
                                                             {162, "nanosleep"},
                                                             {163, "mremap"},
                                                             {164, "setresuid16"},
                                                             {165, "getresuid16"},
                                                             {166, "vm86"},
                                                             {168, "poll"},
                                                             {170, "setresgid16"},
                                                             {171, "getresgid16"},
                                                             {172, "prctl"},
                                                             {173, "rt_sigreturn"},
                                                             {174, "rt_sigaction"},
                                                             {175, "rt_sigprocmask"},
                                                             {176, "rt_sigpending"},
                                                             {177, "rt_sigtimedwait"},
                                                             {178, "rt_sigqueueinfo"},
                                                             {179, "rt_sigsuspend"},
                                                             {180, "pread64"},
                                                             {181, "pwrite64"},
                                                             {182, "chown16"},
                                                             {183, "getcwd"},
                                                             {184, "capget"},
                                                             {185, "capset"},
                                                             {186, "sigaltstack"},
                                                             {187, "sendfile"},
                                                             {190, "vfork"},
                                                             {191, "getrlimit"},
                                                             {192, "mmap_pgoff"},
                                                             {193, "truncate64"},
                                                             {194, "ftruncate64"},
                                                             {195, "stat64"},
                                                             {196, "lstat64"},
                                                             {197, "fstat64"},
                                                             {198, "lchown"},
                                                             {199, "getuid"},
                                                             {200, "getgid"},
                                                             {201, "geteuid"},
                                                             {202, "getegid"},
                                                             {203, "setreuid"},
                                                             {204, "setregid"},
                                                             {205, "getgroups"},
                                                             {206, "setgroups"},
                                                             {207, "fchown"},
                                                             {208, "setresuid"},
                                                             {209, "getresuid"},
                                                             {210, "setresgid"},
                                                             {211, "getresgid"},
                                                             {212, "chown"},
                                                             {213, "setuid"},
                                                             {214, "setgid"},
                                                             {215, "setfsuid"},
                                                             {216, "setfsgid"},
                                                             {217, "pivot_root"},
                                                             {218, "mincore"},
                                                             {219, "madvise"},
                                                             {220, "getdents64"},
                                                             {221, "fcntl64"},
                                                             {224, "gettid"},
                                                             {225, "readahead"},
                                                             {226, "setxattr"},
                                                             {227, "lsetxattr"},
                                                             {228, "fsetxattr"},
                                                             {229, "getxattr"},
                                                             {230, "lgetxattr"},
                                                             {231, "fgetxattr"},
                                                             {232, "listxattr"},
                                                             {233, "llistxattr"},
                                                             {234, "flistxattr"},
                                                             {235, "removexattr"},
                                                             {236, "lremovexattr"},
                                                             {237, "fremovexattr"},
                                                             {238, "tkill"},
                                                             {239, "sendfile64"},
                                                             {240, "futex"},
                                                             {241, "sched_setaffinity"},
                                                             {242, "sched_getaffinity"},
                                                             {243, "set_thread_area"},
                                                             {244, "get_thread_area"},
                                                             {245, "io_setup"},
                                                             {246, "io_destroy"},
                                                             {247, "io_getevents"},
                                                             {248, "io_submit"},
                                                             {249, "io_cancel"},
                                                             {250, "fadvise64"},
                                                             {252, "exit_group"},
                                                             {254, "epoll_create"},
                                                             {255, "epoll_ctl"},
                                                             {256, "epoll_wait"},
                                                             {257, "remap_file_pages"},
                                                             {258, "set_tid_address"},
                                                             {259, "timer_create"},
                                                             {260, "timer_settime"},
                                                             {261, "timer_gettime"},
                                                             {262, "timer_getoverrun"},
                                                             {263, "timer_delete"},
                                                             {264, "clock_settime"},
                                                             {265, "clock_gettime"},
                                                             {266, "clock_getres"},
                                                             {267, "clock_nanosleep"},
                                                             {268, "statfs64"},
                                                             {269, "fstatfs64"},
                                                             {270, "tgkill"},
                                                             {271, "utimes"},
                                                             {272, "fadvise64_64"},
                                                             {274, "mbind"},
                                                             {275, "get_mempolicy"},
                                                             {276, "set_mempolicy"},
                                                             {277, "mq_open"},
                                                             {278, "mq_unlink"},
                                                             {279, "mq_timedsend"},
                                                             {280, "mq_timedreceive"},
                                                             {281, "mq_notify"},
                                                             {282, "mq_getsetattr"},
                                                             {283, "kexec_load"},
                                                             {284, "waitid"},
                                                             {286, "add_key"},
                                                             {287, "request_key"},
                                                             {288, "keyctl"},
                                                             {289, "ioprio_set"},
                                                             {290, "ioprio_get"},
                                                             {291, "inotify_init"},
                                                             {292, "inotify_add_watch"},
                                                             {293, "inotify_rm_watch"},
                                                             {294, "migrate_pages"},
                                                             {295, "openat"},
                                                             {296, "mkdirat"},
                                                             {297, "mknodat"},
                                                             {298, "fchownat"},
                                                             {299, "futimesat"},
                                                             {300, "fstatat64"},
                                                             {301, "unlinkat"},
                                                             {302, "renameat"},
                                                             {303, "linkat"},
                                                             {304, "symlinkat"},
                                                             {305, "readlinkat"},
                                                             {306, "fchmodat"},
                                                             {307, "faccessat"},
                                                             {308, "pselect6"},
                                                             {309, "ppoll"},
                                                             {310, "unshare"},
                                                             {311, "set_robust_list"},
                                                             {312, "get_robust_list"},
                                                             {313, "splice"},
                                                             {314, "sync_file_range"},
                                                             {315, "tee"},
                                                             {316, "vmsplice"},
                                                             {317, "move_pages"},
                                                             {318, "getcpu"},
                                                             {319, "epoll_pwait"},
                                                             {320, "utimensat"},
                                                             {321, "signalfd"},
                                                             {322, "timerfd_create"},
                                                             {323, "eventfd"},
                                                             {324, "fallocate"},
                                                             {325, "timerfd_settime"},
                                                             {326, "timerfd_gettime"},
                                                             {327, "signalfd4"},
                                                             {328, "eventfd2"},
                                                             {329, "epoll_create1"},
                                                             {330, "dup3"},
                                                             {331, "pipe2"},
                                                             {332, "inotify_init1"},
                                                             {333, "preadv"},
                                                             {334, "pwritev"},
                                                             {335, "rt_tgsigqueueinfo"},
                                                             {336, "perf_event_open"},
                                                             {337, "recvmmsg"},
                                                             {338, "fanotify_init"},
                                                             {339, "fanotify_mark"},
                                                             {340, "prlimit64"},
                                                             {341, "name_to_handle_at"},
                                                             {342, "open_by_handle_at"},
                                                             {343, "clock_adjtime"},
                                                             {344, "syncfs"},
                                                             {345, "sendmmsg"},
                                                             {346, "setns"},
                                                             {347, "process_vm_readv"},
                                                             {348, "process_vm_writev"},
                                                             {349, "kcmp"},
                                                             {350, "finit_module"},
                                                             {351, "sched_setattr"},
                                                             {352, "sched_getattr"},
                                                             {353, "renameat2"},
                                                             {354, "seccomp"},
                                                             {355, "getrandom"},
                                                             {356, "memfd_create"},
                                                             {357, "bpf"},
                                                             {358, "execveat"},
                                                             {359, "socket"},
                                                             {360, "socketpair"},
                                                             {361, "bind"},
                                                             {362, "connect"},
                                                             {363, "listen"},
                                                             {364, "accept4"},
                                                             {365, "getsockopt"},
                                                             {366, "setsockopt"},
                                                             {367, "getsockname"},
                                                             {368, "getpeername"},
                                                             {369, "sendto"},
                                                             {370, "sendmsg"},
                                                             {371, "recvfrom"},
                                                             {372, "recvmsg"},
                                                             {373, "shutdown"},
                                                             {374, "userfaultfd"},
                                                             {375, "membarrier"},
                                                             {376, "mlock2"},
                                                             {377, "copy_file_range"},
                                                             {378, "preadv2"},
                                                             {379, "pwritev2"},
                                                             {383, "statx"},
                                                             {384, "arch_prctl"},
                                                             {385, "io_pgetevents"},
                                                             {386, "rseq"},
                                                             {393, "semget"},
                                                             {394, "semctl"},
                                                             {395, "shmget"},
                                                             {396, "shmctl"},
                                                             {397, "shmat"},
                                                             {398, "shmdt"},
                                                             {399, "msgget"},
                                                             {400, "msgsnd"},
                                                             {401, "msgrcv"},
                                                             {402, "msgctl"},
                                                             {403, "clock_gettime"},
                                                             {404, "clock_settime"},
                                                             {405, "clock_adjtime"},
                                                             {406, "clock_getres"},
                                                             {407, "clock_nanosleep"},
                                                             {408, "timer_gettime"},
                                                             {409, "timer_settime"},
                                                             {410, "timerfd_gettime"},
                                                             {411, "timerfd_settime"},
                                                             {412, "utimensat"},
                                                             {413, "pselect6"},
                                                             {414, "ppoll"},
                                                             {416, "io_pgetevents"},
                                                             {417, "recvmmsg"},
                                                             {418, "mq_timedsend"},
                                                             {419, "mq_timedreceive"},
                                                             {420, "semtimedop"},
                                                             {421, "rt_sigtimedwait"},
                                                             {422, "futex_time64"},
                                                             {423, "sched_rr_get_interval"},
                                                             {424, "pidfd_send_signal"},
                                                             {425, "io_uring_setup"},
                                                             {426, "io_uring_enter"},
                                                             {427, "io_uring_register"},
                                                             {428, "open_tree"},
                                                             {429, "move_mount"},
                                                             {430, "fsopen"},
                                                             {431, "fsconfig"},
                                                             {432, "fsmount"},
                                                             {433, "fspick"},
                                                             {434, "pidfd_open"},
                                                             {435, "clone3"},
                                                             {436, "close_range"},
                                                             {437, "openat2"},
                                                             {438, "pidfd_getfd"},
                                                             {439, "faccessat2"},
                                                             {440, "process_madvise"},
                                                             {441, "epoll_pwait2"},
                                                             {442, "mount_setattr"},
                                                             {443, "quotactl_fd"},
                                                             {444, "landlock_create_ruleset"},
                                                             {445, "landlock_add_rule"},
                                                             {446, "landlock_restrict_self"},
                                                             {447, "memfd_secret"},
                                                             {448, "process_mrelease"},
                                                             {449, "futex_waitv"},
                                                             {450, "set_mempolicy_home_node"},
                                                             {451, "cachestat"},
                                                             {452, "fchmodat2"},
                                                             {454, "futex_wake"},
                                                             {455, "futex_wait"},
                                                             {456, "futex_requeue"},
                                                             {457, "statmount"},
                                                             {458, "listmount"},
                                                             {459, "lsm_get_self_attr"},
                                                             {460, "lsm_set_self_attr"},
                                                             {461, "lsm_list_modules"},
                                                             {463, "setxattrat"},
                                                             {464, "getxattrat"},
                                                             {465, "listxattrat"},
                                                             {466, "removexattrat"}};

inline std::map<std::string, arion::REG> ARCH_REGS = {
    {"AH", UC_X86_REG_AH},       {"AL", UC_X86_REG_AL},         {"AX", UC_X86_REG_AX},     {"BH", UC_X86_REG_BH},
    {"BL", UC_X86_REG_BL},       {"BP", UC_X86_REG_BP},         {"BPL", UC_X86_REG_BPL},   {"BX", UC_X86_REG_BX},
    {"CH", UC_X86_REG_CH},       {"CL", UC_X86_REG_CL},         {"CS", UC_X86_REG_CS},     {"CX", UC_X86_REG_CX},
    {"DH", UC_X86_REG_DH},       {"DI", UC_X86_REG_DI},         {"DIL", UC_X86_REG_DIL},   {"DL", UC_X86_REG_DL},
    {"DS", UC_X86_REG_DS},       {"DX", UC_X86_REG_DX},         {"EAX", UC_X86_REG_EAX},   {"EBP", UC_X86_REG_EBP},
    {"EBX", UC_X86_REG_EBX},     {"ECX", UC_X86_REG_ECX},       {"EDI", UC_X86_REG_EDI},   {"EDX", UC_X86_REG_EDX},
    {"EIP", UC_X86_REG_EIP},     {"ES", UC_X86_REG_ES},         {"ESI", UC_X86_REG_ESI},   {"ESP", UC_X86_REG_ESP},
    {"FPSW", UC_X86_REG_FPSW},   {"FS", UC_X86_REG_FS},         {"GS", UC_X86_REG_GS},     {"IP", UC_X86_REG_IP},
    {"SI", UC_X86_REG_SI},       {"SIL", UC_X86_REG_SIL},       {"SP", UC_X86_REG_SP},     {"SPL", UC_X86_REG_SPL},
    {"SS", UC_X86_REG_SS},       {"CR0", UC_X86_REG_CR0},       {"CR1", UC_X86_REG_CR1},   {"CR2", UC_X86_REG_CR2},
    {"CR3", UC_X86_REG_CR3},     {"CR4", UC_X86_REG_CR4},       {"CR8", UC_X86_REG_CR8},   {"DR0", UC_X86_REG_DR0},
    {"DR1", UC_X86_REG_DR1},     {"DR2", UC_X86_REG_DR2},       {"DR3", UC_X86_REG_DR3},   {"DR4", UC_X86_REG_DR4},
    {"DR5", UC_X86_REG_DR5},     {"DR6", UC_X86_REG_DR6},       {"DR7", UC_X86_REG_DR7},   {"FP0", UC_X86_REG_FP0},
    {"FP1", UC_X86_REG_FP1},     {"FP2", UC_X86_REG_FP2},       {"FP3", UC_X86_REG_FP3},   {"FP4", UC_X86_REG_FP4},
    {"FP5", UC_X86_REG_FP5},     {"FP6", UC_X86_REG_FP6},       {"FP7", UC_X86_REG_FP7},   {"R8", UC_X86_REG_R8},
    {"ST0", UC_X86_REG_ST0},     {"ST1", UC_X86_REG_ST1},       {"ST2", UC_X86_REG_ST2},   {"ST3", UC_X86_REG_ST3},
    {"ST4", UC_X86_REG_ST4},     {"ST5", UC_X86_REG_ST5},       {"ST6", UC_X86_REG_ST6},   {"ST7", UC_X86_REG_ST7},
    {"XMM0", UC_X86_REG_XMM0},   {"XMM1", UC_X86_REG_XMM1},     {"XMM2", UC_X86_REG_XMM2}, {"XMM3", UC_X86_REG_XMM3},
    {"XMM4", UC_X86_REG_XMM4},   {"XMM5", UC_X86_REG_XMM5},     {"XMM6", UC_X86_REG_XMM6}, {"XMM7", UC_X86_REG_XMM7},
    {"YMM0", UC_X86_REG_YMM0},   {"YMM1", UC_X86_REG_YMM1},     {"YMM2", UC_X86_REG_YMM2}, {"YMM3", UC_X86_REG_YMM3},
    {"YMM4", UC_X86_REG_YMM4},   {"YMM5", UC_X86_REG_YMM5},     {"YMM6", UC_X86_REG_YMM6}, {"YMM7", UC_X86_REG_YMM7},
    {"IDTR", UC_X86_REG_IDTR},   {"GDTR", UC_X86_REG_GDTR},     {"LDTR", UC_X86_REG_LDTR}, {"TR", UC_X86_REG_TR},
    {"FPCW", UC_X86_REG_FPCW},   {"FPTAG", UC_X86_REG_FPTAG},   {"MSR", UC_X86_REG_MSR},   {"MXCSR", UC_X86_REG_MXCSR},
    {"FLAGS", UC_X86_REG_FLAGS}, {"EFLAGS", UC_X86_REG_EFLAGS}, {"FIP", UC_X86_REG_FIP},   {"FCS", UC_X86_REG_FCS},
    {"FDP", UC_X86_REG_FDP},     {"FDS", UC_X86_REG_FDS},       {"FOP", UC_X86_REG_FOP}};

inline std::map<arion::REG, uint8_t> ARCH_REGS_SZ = {
    {UC_X86_REG_AH, 1},    {UC_X86_REG_AL, 1},    {UC_X86_REG_AX, 2},     {UC_X86_REG_BH, 1},    {UC_X86_REG_BL, 1},
    {UC_X86_REG_BP, 2},    {UC_X86_REG_BPL, 1},   {UC_X86_REG_BX, 2},     {UC_X86_REG_CH, 1},    {UC_X86_REG_CL, 1},
    {UC_X86_REG_CS, 2},    {UC_X86_REG_CX, 2},    {UC_X86_REG_DH, 1},     {UC_X86_REG_DI, 2},    {UC_X86_REG_DIL, 1},
    {UC_X86_REG_DL, 1},    {UC_X86_REG_DS, 2},    {UC_X86_REG_DX, 2},     {UC_X86_REG_EAX, 4},   {UC_X86_REG_EBP, 4},
    {UC_X86_REG_EBX, 4},   {UC_X86_REG_ECX, 4},   {UC_X86_REG_EDI, 4},    {UC_X86_REG_EDX, 4},   {UC_X86_REG_EIP, 4},
    {UC_X86_REG_ES, 2},    {UC_X86_REG_ESI, 4},   {UC_X86_REG_ESP, 4},    {UC_X86_REG_FPSW, 2},  {UC_X86_REG_FS, 2},
    {UC_X86_REG_GS, 2},    {UC_X86_REG_IP, 2},    {UC_X86_REG_SI, 2},     {UC_X86_REG_SIL, 1},   {UC_X86_REG_SP, 2},
    {UC_X86_REG_SPL, 1},   {UC_X86_REG_SS, 2},    {UC_X86_REG_CR0, 8},    {UC_X86_REG_CR1, 8},   {UC_X86_REG_CR2, 8},
    {UC_X86_REG_CR3, 8},   {UC_X86_REG_CR4, 8},   {UC_X86_REG_CR8, 8},    {UC_X86_REG_DR0, 8},   {UC_X86_REG_DR1, 8},
    {UC_X86_REG_DR2, 8},   {UC_X86_REG_DR3, 8},   {UC_X86_REG_DR4, 8},    {UC_X86_REG_DR5, 8},   {UC_X86_REG_DR6, 8},
    {UC_X86_REG_DR7, 8},   {UC_X86_REG_FP0, 10},  {UC_X86_REG_FP1, 10},   {UC_X86_REG_FP2, 10},  {UC_X86_REG_FP3, 10},
    {UC_X86_REG_FP4, 10},  {UC_X86_REG_FP5, 10},  {UC_X86_REG_FP6, 10},   {UC_X86_REG_FP7, 10},  {UC_X86_REG_ST0, 10},
    {UC_X86_REG_ST1, 10},  {UC_X86_REG_ST2, 10},  {UC_X86_REG_ST3, 10},   {UC_X86_REG_ST4, 10},  {UC_X86_REG_ST5, 10},
    {UC_X86_REG_ST6, 10},  {UC_X86_REG_ST7, 10},  {UC_X86_REG_XMM0, 16},  {UC_X86_REG_XMM1, 16}, {UC_X86_REG_XMM2, 16},
    {UC_X86_REG_XMM3, 16}, {UC_X86_REG_XMM4, 16}, {UC_X86_REG_XMM5, 16},  {UC_X86_REG_XMM6, 16}, {UC_X86_REG_XMM7, 16},
    {UC_X86_REG_YMM0, 32}, {UC_X86_REG_YMM1, 32}, {UC_X86_REG_YMM2, 32},  {UC_X86_REG_YMM3, 32}, {UC_X86_REG_YMM4, 32},
    {UC_X86_REG_YMM5, 32}, {UC_X86_REG_YMM6, 32}, {UC_X86_REG_YMM7, 32},  {UC_X86_REG_IDTR, 24}, {UC_X86_REG_GDTR, 24},
    {UC_X86_REG_LDTR, 24}, {UC_X86_REG_TR, 24},   {UC_X86_REG_FPCW, 2},   {UC_X86_REG_FPTAG, 2}, {UC_X86_REG_MSR, 16},
    {UC_X86_REG_MXCSR, 4}, {UC_X86_REG_FLAGS, 2}, {UC_X86_REG_EFLAGS, 4}, {UC_X86_REG_FIP, 8},   {UC_X86_REG_FCS, 2},
    {UC_X86_REG_FDP, 8},   {UC_X86_REG_FDS, 2},   {UC_X86_REG_FOP, 2}};

inline std::vector<arion::REG> CTXT_REGS = {
    UC_X86_REG_FS,   UC_X86_REG_GS,   UC_X86_REG_EAX,   UC_X86_REG_EBP,  UC_X86_REG_EBX,  UC_X86_REG_ECX,
    UC_X86_REG_EDI,  UC_X86_REG_EDX,  UC_X86_REG_EIP,   UC_X86_REG_ESI,  UC_X86_REG_ESP,  UC_X86_REG_SS,
    UC_X86_REG_CS,   UC_X86_REG_DS,   UC_X86_REG_FP0,   UC_X86_REG_FP1,  UC_X86_REG_FP2,  UC_X86_REG_FP3,
    UC_X86_REG_FP4,  UC_X86_REG_FP5,  UC_X86_REG_FP6,   UC_X86_REG_FP7,  UC_X86_REG_ST0,  UC_X86_REG_ST1,
    UC_X86_REG_ST2,  UC_X86_REG_ST3,  UC_X86_REG_ST4,   UC_X86_REG_ST5,  UC_X86_REG_ST6,  UC_X86_REG_ST7,
    UC_X86_REG_YMM0, UC_X86_REG_YMM1, UC_X86_REG_YMM2,  UC_X86_REG_YMM3, UC_X86_REG_YMM4, UC_X86_REG_YMM5,
    UC_X86_REG_YMM6, UC_X86_REG_YMM7, UC_X86_REG_EFLAGS};

inline std::map<uint64_t, CPU_INTR> IDT = {{0, DIVIDE_ERROR},
                                           {1, DEBUG_EXCEPTION},
                                           {2, NON_MASKABLE_INTR},
                                           {3, BREAKPOINT},
                                           {4, OVERFLOW},
                                           {5, BOUND_RANGE_EXCEEDED},
                                           {6, INVALID_OPCODE},
                                           {7, DEVICE_NOT_AVAILABLE},
                                           {8, DOUBLE_FAULT},
                                           {9, COPROCESSOR_SEGMENT_OVERRUN},
                                           {10, INVALID_TSS},
                                           {11, SEGMENT_NOT_PRESENT},
                                           {12, STACK_SEGMENT_FAULT},
                                           {13, GENERAL_PROTECTION_FAULT},
                                           {14, PAGE_FAULT},
                                           {15, RESERVED},
                                           {16, X87_FLOATING_POINT_EXCEPTION},
                                           {17, ALIGNMENT_CHECK},
                                           {18, MACHINE_CHECK},
                                           {19, SIMD_FLOATING_POINT_ERROR}};

inline ABI_REGISTERS ABI_REGS = ABI_REGISTERS(UC_X86_REG_EIP, UC_X86_REG_ESP, UC_X86_REG_INVALID);

inline ABI_CALLING_CONVENTION ABI_CALLING_CONV = ABI_CALLING_CONVENTION(UC_X86_REG_EAX, {});

inline ABI_SYSCALLING_CONVENTION ABI_SYSCALLING_CONV = ABI_SYSCALLING_CONVENTION(
    UC_X86_REG_EAX, UC_X86_REG_EAX,
    {UC_X86_REG_EBX, UC_X86_REG_ECX, UC_X86_REG_EDX, UC_X86_REG_ESI, UC_X86_REG_EDI, UC_X86_REG_EBP});

inline arion::KERNEL_SEG_FLAGS SEG_FLAGS = ARION_VVAR_PRESENT | ARION_VDSO_PRESENT;

inline uint32_t HWCAP2 = 2;

inline uint32_t HWCAP = 0xbfebfbff;

inline const size_t PTR_SZ = 4;

inline const uint16_t ARCH_SZ = 32;

inline std::string ARCH_NAME = "x86";

inline arion::CPU_ARCH ARCH = arion::CPU_ARCH::X86_ARCH;

inline ABI_ATTRIBUTES ABI_ATTRS = ABI_ATTRIBUTES(ARCH, ARCH_NAME, ARCH_SZ, PTR_SZ, HWCAP, HWCAP2, SEG_FLAGS, ABI_REGS,
                                                 ABI_CALLING_CONV, ABI_SYSCALLING_CONV, NAME_BY_SYSCALL_NO);
} // namespace arion_x86

class AbiManagerX86 : public AbiManager
{
  private:
    static void int_hook(std::shared_ptr<Arion> arion, uint32_t intno, void *user_data);
    void setup();

  public:
    AbiManagerX86()
        : AbiManager(std::make_shared<ABI_ATTRIBUTES>(arion_x86::ABI_ATTRS), arion_x86::ARCH_REGS,
                     arion_x86::ARCH_REGS_SZ, arion_x86::CTXT_REGS, arion_x86::IDT, true) {};

    std::array<arion::BYTE, VSYSCALL_ENTRY_SZ> gen_vsyscall_entry(uint64_t syscall_no);
    ks_engine *curr_ks();
    csh *curr_cs();
};

#endif // ARION_ABI_X86_HPP
